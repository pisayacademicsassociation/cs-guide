import{_ as s,c as a,a as e,o as t}from"./app-DiMz07qt.js";const o="/cs-guide/assets/input_1-rnvWoFi6.png",p="/cs-guide/assets/message_dialogs-BTBtYGGn.png",i={};function l(c,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h1 id="dialogs-and-messages" tabindex="-1"><a class="header-anchor" href="#dialogs-and-messages"><span>Dialogs and Messages</span></a></h1><p>There may be some instances where you wanted to show a quick message to the user, but it&#39;s too hard to be implemented into the GUI directly, or to be created in an entirely new JFrame. Luckily, there is a solution: the Dialog Box.</p><p>A dialog box can be used to easily display messages, output, or even take input! To use dialog boxes, you need the <code>JOptionPane</code> class from the <code>javax.swing</code> package.</p><h2 id="taking-input-using-a-dialog-box" tabindex="-1"><a class="header-anchor" href="#taking-input-using-a-dialog-box"><span>Taking input using a dialog box</span></a></h2><p>To take user input using a dialog box, you can use the <code>JOptionPane.showInputDialog()</code> method.</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token function">showInputDialog</span><span class="token punctuation">(</span><span class="token class-name">Object</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Using this method shows an input dialog with <code>message</code> as the message.</p><img src="`+o+`"><p>Additionally, you can center the input dialog relative to a component by providing a <code>parentComponent</code>.</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token function">showInputDialog</span><span class="token punctuation">(</span><span class="token class-name">Component</span> parentComponent<span class="token punctuation">,</span> <span class="token class-name">Object</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Using this method would center the created input dialog on the <code>parentComponent</code>.</p><p>Do you wanna add a title? Well, you can!</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">showInputDialog</span><span class="token punctuation">(</span><span class="token class-name">Component</span> parentComponent<span class="token punctuation">,</span> <span class="token class-name">Object</span> message<span class="token punctuation">,</span> <span class="token class-name">String</span> title<span class="token punctuation">,</span> <span class="token keyword">int</span> messageType<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This overloaded method shows a input dialog box from the user parented to <code>parentComponent</code> with the dialog having the title <code>title</code> and message type <code>messageType</code>.</p><ul><li><strong>Parameters:</strong><ul><li><strong>parentComponent</strong> the parent <code>Component</code> for the dialog</li><li><strong>message</strong> the <code>Object</code> to display</li><li><strong>title</strong> the <code>String</code> to display in the dialog title bar</li><li><strong>messageType</strong> the type of message that is to be displayed: <code>JOptionPane.ERROR_MESSAGE</code>, <code>JOptionPane.INFORMATION_MESSAGE</code>, <code>JOptionPane.WARNING_MESSAGE</code>, <code>JOptionPane.QUESTION_MESSAGE</code>, or <code>JOptionPane.PLAIN_MESSAGE</code>.</li></ul></li></ul><p>While this dialog box is still on the screen, the user cannot interact with the application.</p><p><strong>Example:</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">String</span> input <span class="token operator">=</span> <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token function">showInputDialog</span><span class="token punctuation">(</span>myJButton<span class="token punctuation">,</span> <span class="token string">&quot;Please input a number.&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Number input&quot;</span><span class="token punctuation">,</span> <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token constant">QUESTION_MESSAGE</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="displaying-messages-using-a-dialog-box" tabindex="-1"><a class="header-anchor" href="#displaying-messages-using-a-dialog-box"><span>Displaying messages using a dialog box</span></a></h2><p>To take user input using a dialog box, you can use the <code>JOptionPane.showMessageDialog()</code> method.</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">showMessageDialog</span><span class="token punctuation">(</span><span class="token class-name">Component</span> parentComponent<span class="token punctuation">,</span> <span class="token class-name">Object</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Just like <code>showInputDialog()</code>, you can center the message dialog relative to a component by providing a <code>parentComponent</code>.</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">showMessageDialog</span><span class="token punctuation">(</span><span class="token class-name">Component</span> parentComponent<span class="token punctuation">,</span> <span class="token class-name">Object</span> message<span class="token punctuation">,</span> <span class="token class-name">String</span> title<span class="token punctuation">,</span> <span class="token keyword">int</span> messageType<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This overloaded method brings up a dialog that displays a message using a default icon determined by the <code>messageType</code> parameter.</p><ul><li>Parameters: <ul><li><strong>parentComponent</strong> determines the <code>Frame</code> in which the dialog is displayed; if <code>null</code>, or if the <code>parentComponent</code> has no <code>Frame</code>, a default <code>Frame</code> is used.</li><li><strong>message</strong> the <code>Object</code> to display.</li><li><strong>title</strong> the title string for the dialog.</li><li><strong>messageType</strong> the type of message that is to be displayed: <code>JOptionPane.ERROR_MESSAGE</code>, <code>JOptionPane.INFORMATION_MESSAGE</code>, <code>JOptionPane.WARNING_MESSAGE</code>, <code>JOptionPane.QUESTION_MESSAGE</code>, or <code>JOptionPane.PLAIN_MESSAGE</code>.</li></ul></li></ul><p><strong>Example:</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">String</span> input <span class="token operator">=</span> <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token function">showMessageDialog</span><span class="token punctuation">(</span>myJButton<span class="token punctuation">,</span> <span class="token string">&quot;Please input a proper number!&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Wrong input!&quot;</span><span class="token punctuation">,</span> <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token constant">ERROR_MESSAGE</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="confirmations-using-a-dialog-box" tabindex="-1"><a class="header-anchor" href="#confirmations-using-a-dialog-box"><span>Confirmations using a dialog box</span></a></h2><p>To ask a user for confirmation using a dialog box, you can use the <code>JOptionPane.showConfirmDialog()</code> method.</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">showConfirmDialog</span><span class="token punctuation">(</span><span class="token class-name">Component</span> parentComponent<span class="token punctuation">,</span> <span class="token class-name">Object</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Just like <code>showInputDialog()</code>, you can center the confirm dialog relative to a component by providing a <code>parentComponent</code>.</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">showConfirmDialog</span><span class="token punctuation">(</span><span class="token class-name">Component</span> parentComponent<span class="token punctuation">,</span> <span class="token class-name">Object</span> message<span class="token punctuation">,</span> <span class="token class-name">String</span> title<span class="token punctuation">,</span> <span class="token keyword">int</span> optionType<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This overloaded method brings up a dialog where the number of choices is determined by the <code>optionType</code> parameter.</p><ul><li>Parameters: <ul><li><strong>parentComponent</strong> determines the <code>Frame</code> in which the dialog is displayed; if <code>null</code>, or if the <code>parentComponent</code> has no <code>Frame</code>, a default <code>Frame</code> is used.</li><li><strong>message</strong> the <code>Object</code> to display.</li><li><strong>title</strong> the title string for the dialog.</li><li><strong>optionType</strong> the type of options available on the dialog: <code>JOptionPane.YES_NO_OPTION</code>, <code>JOptionPane.YES_NO_CANCEL_OPTION</code>, or <code>JOptionPane.OK_CANCEL_OPTION</code>.</li></ul></li></ul><p>If you want to add the <code>messageType</code> parameter as well, you can do so using the overloaded method below:</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">showMessageDialog</span><span class="token punctuation">(</span><span class="token class-name">Component</span> parentComponent<span class="token punctuation">,</span> <span class="token class-name">Object</span> message<span class="token punctuation">,</span> <span class="token class-name">String</span> title<span class="token punctuation">,</span> <span class="token keyword">int</span> optionType<span class="token punctuation">,</span> <span class="token keyword">int</span> messageType<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This overloaded method brings up a dialog where the number of choices is determined by the <code>optionType</code> parameter, where the <code>messageType</code> parameter determines the icon to display.</p><ul><li>Parameters: <ul><li><strong>parentComponent</strong> determines the <code>Frame</code> in which the dialog is displayed; if <code>null</code>, or if the <code>parentComponent</code> has no <code>Frame</code>, a default <code>Frame</code> is used.</li><li><strong>message</strong> the <code>Object</code> to display.</li><li><strong>title</strong> the title string for the dialog.</li><li><strong>optionType</strong> the type of options available on the dialog: <code>JOptionPane.YES_NO_OPTION</code>, <code>JOptionPane.YES_NO_CANCEL_OPTION</code>, or <code>JOptionPane.OK_CANCEL_OPTION</code>.</li><li><strong>messageType</strong> the type of message that is to be displayed: <code>JOptionPane.ERROR_MESSAGE</code>, <code>JOptionPane.INFORMATION_MESSAGE</code>, <code>JOptionPane.WARNING_MESSAGE</code>, <code>JOptionPane.QUESTION_MESSAGE</code>, or <code>JOptionPane.PLAIN_MESSAGE</code>.</li></ul></li></ul><p><code>showMessageDialog()</code> outputs an integer that corresponds to the user&#39;s choice. You can compare the returned integer to the constants from the <code>JOptionPane</code>: <code>JOptionPane.OK_OPTION</code>, <code>JOptionPane.YES_OPTION</code>, <code>JOptionPane.NO_OPTION</code>, and <code>JOptionPane.CANCEL_OPTION</code>.</p><p><strong>Example:</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span> choice <span class="token operator">=</span> <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token function">showConfirmDialog</span><span class="token punctuation">(</span>myJButton<span class="token punctuation">,</span> <span class="token string">&quot;Are you sure you want to confirm?&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Confirmation&quot;</span><span class="token punctuation">,</span> <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token constant">YES_NO_CANCEL_OPTION</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>choice <span class="token operator">==</span><span class="token operator">=</span> <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token constant">YES_OPTION</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token comment">// do something when the user clicks yes.</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ...</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="message-types" tabindex="-1"><a class="header-anchor" href="#message-types"><span>Message types</span></a></h2><p>For easy reference, refer to the image below for the types of <code>messageType</code> that you can use <em>taken from the presentation</em>.</p><img src="`+p+'"><p>Retrieved from <em>JOptionPane Message Dialog Constants.</em> (2019). In K. Sierra &amp; B. Bates (Eds.), Java™ <em>How To Program (Early Objects)</em> (10th ed., p. 552). O&#39;Reilly Media, Inc.: <a href="https://www.oreilly.com/" target="_blank" rel="noopener noreferrer">https://www.oreilly.com/</a></p>',45)]))}const r=s(i,[["render",l],["__file","dialogs-and-messages.html.vue"]]),u=JSON.parse('{"path":"/cs4/3/dialogs-and-messages.html","title":"Dialogs and Messages","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Taking input using a dialog box","slug":"taking-input-using-a-dialog-box","link":"#taking-input-using-a-dialog-box","children":[]},{"level":2,"title":"Displaying messages using a dialog box","slug":"displaying-messages-using-a-dialog-box","link":"#displaying-messages-using-a-dialog-box","children":[]},{"level":2,"title":"Confirmations using a dialog box","slug":"confirmations-using-a-dialog-box","link":"#confirmations-using-a-dialog-box","children":[]},{"level":2,"title":"Message types","slug":"message-types","link":"#message-types","children":[]}],"git":{"updatedTime":1737561594000},"filePathRelative":"cs4/3/dialogs-and-messages.md"}');export{r as comp,u as data};
