import{_ as i,c as r,b as e,e as s,f as t,a as o,r as d,o as c,d as l}from"./app-h2x3JFrR.js";const v={},p={class:"table-of-contents"};function u(b,a){const n=d("router-link");return c(),r("div",null,[a[3]||(a[3]=e("h1",{id:"variables",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#variables"},[e("span",null,"Variables")])],-1)),a[4]||(a[4]=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents"},[e("span",null,"Table of Contents")])],-1)),e("nav",p,[e("ul",null,[e("li",null,[s(n,{to:"#table-of-contents"},{default:t(()=>a[0]||(a[0]=[l("Table of Contents")])),_:1})]),e("li",null,[s(n,{to:"#what-are-variables-anyway"},{default:t(()=>a[1]||(a[1]=[l("What are variables, anyway?")])),_:1})]),e("li",null,[s(n,{to:"#variable-naming-conventions"},{default:t(()=>a[2]||(a[2]=[l("Variable naming conventions")])),_:1})])])]),a[5]||(a[5]=o(`<h2 id="what-are-variables-anyway" tabindex="-1"><a class="header-anchor" href="#what-are-variables-anyway"><span>What are variables, anyway?</span></a></h2><p>Variables are parts of a program that can store and represent data.</p><p>These are usually used as</p><ul><li>instance variables - variables tied to a class instance;</li><li>local variables - variables declared in a method;</li><li>arguments - variables passed to a method;</li><li>return values - variables returned by a method.</li></ul><p>For Java, each variable must have a type and unique name that identifies said variable.</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">69</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="variable-naming-conventions" tabindex="-1"><a class="header-anchor" href="#variable-naming-conventions"><span>Variable naming conventions</span></a></h2><p>Just like any other programming language, you can&#39;t use reserved keywords like <code>if</code> and <code>else</code> as variable names, and standard variable naming rules also apply:</p><ul><li>The valid characters to name a variable with are letters, digits, dollar signs and underscore characters, however</li><li>You <strong>cannot</strong> have a number as the first character in your variable.</li></ul><p>There are also the standard variable naming conventions:</p><ul><li>For naming variables, you don&#39;t use the &quot;$&quot; symbol.</li><li>For naming variables, properties and methods, <code>camelCase</code> is used, while classes use <code>PascalCase</code>, however.</li><li>Constant values are named in <code>UPPER_SNAKE_CASE</code>.</li></ul><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>Do note that <strong>conventions</strong> are different from <strong>rules</strong>! Breaking the variable naming rules will lead to an error, but breaking the variable naming conventions won&#39;t!</p></div><p>If you want to declare a variable as a constant variable, use the <code>final</code> keyword before the type declaration, like so:</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">final</span> <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">69</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,14))])}const m=i(v,[["render",u],["__file","variables.html.vue"]]),g=JSON.parse('{"path":"/cs4/1/variables.html","title":"Variables","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Table of Contents","slug":"table-of-contents","link":"#table-of-contents","children":[]},{"level":2,"title":"What are variables, anyway?","slug":"what-are-variables-anyway","link":"#what-are-variables-anyway","children":[]},{"level":2,"title":"Variable naming conventions","slug":"variable-naming-conventions","link":"#variable-naming-conventions","children":[]}],"git":{"updatedTime":1740064904000},"filePathRelative":"cs4/1/variables.md"}');export{m as comp,g as data};
